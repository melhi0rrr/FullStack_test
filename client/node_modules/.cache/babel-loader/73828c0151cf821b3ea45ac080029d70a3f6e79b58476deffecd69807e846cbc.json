{"ast":null,"code":"var _jsxFileName = \"D:\\\\Progects\\\\task_server\\\\FullStack_test\\\\client\\\\src\\\\context\\\\UserContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useReducer, useCallback } from 'react';\nimport * as api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst initialState = {\n  users: [],\n  currentPage: 1,\n  totalPages: 1,\n  loading: true,\n  error: null\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        users: action.payload.users,\n        totalPages: action.payload.totalPages,\n        currentPage: action.payload.currentPage\n      };\n    case 'FETCH_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case 'ADD_USER':\n      return {\n        ...state,\n        users: [action.payload, ...state.users.slice(0, 9)]\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        users: state.users.map(user => user.id === action.payload.id ? action.payload : user)\n      };\n    case 'DELETE_USER':\n      return {\n        ...state,\n        users: state.users.filter(user => user.id !== action.payload)\n      };\n    case 'SET_PAGE':\n      return {\n        ...state,\n        currentPage: action.payload\n      };\n    default:\n      return state;\n  }\n}\nexport function UserProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchUsers = useCallback(async (page = 1, limit = 10) => {\n    try {\n      dispatch({\n        type: 'FETCH_START'\n      });\n      const response = await api.getUsers(page, limit);\n      const responseData = response.data;\n      if (!responseData.data || !responseData.totalPages) {\n        throw new Error('Некорректный формат ответа сервера');\n      }\n      dispatch({\n        type: 'FETCH_SUCCESS',\n        payload: {\n          users: responseData.data,\n          totalPages: responseData.totalPages,\n          currentPage: page\n        }\n      });\n    } catch (error) {\n      console.error('Ошибка загрузки пользователей:', error);\n      dispatch({\n        type: 'FETCH_ERROR',\n        payload: error.message || 'Ошибка загрузки данных'\n      });\n    }\n  }, []);\n  const addUser = useCallback(async user => {\n    try {\n      console.log('Creating user:', user);\n      const response = await api.createUser(user);\n      const newUser = response.data;\n      dispatch({\n        type: 'ADD_USER',\n        payload: newUser\n      });\n      return newUser;\n    } catch (error) {\n      console.error('Ошибка создания пользователя:', error);\n      if (error.response) {\n        console.error('Server response:', error.response.data);\n      }\n      throw error;\n    }\n  }, []);\n  const updateUser = useCallback(async (id, user) => {\n    try {\n      console.log('Updating user:', user);\n      const response = await api.updateUser(id, user);\n      const updatedUser = response.data;\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: updatedUser\n      });\n      return updatedUser;\n    } catch (error) {\n      console.error('Ошибка обновления пользователя:', error);\n      if (error.response) {\n        console.error('Server response:', error.response.data);\n      }\n      throw error;\n    }\n  }, []);\n  const deleteUser = useCallback(async id => {\n    try {\n      await api.deleteUser(id);\n      dispatch({\n        type: 'DELETE_USER',\n        payload: id\n      });\n    } catch (error) {\n      console.error('Ошибка удаления пользователя:', error);\n      throw error;\n    }\n  }, []);\n  const setPage = useCallback(page => {\n    dispatch({\n      type: 'SET_PAGE',\n      payload: page\n    });\n    fetchUsers(page);\n  }, [fetchUsers]);\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      ...state,\n      fetchUsers,\n      addUser,\n      updateUser,\n      deleteUser,\n      setPage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProvider, \"6EXnnRNer3qpGYOHcVozsGWmSbk=\");\n_c = UserProvider;\nexport const useUserContext = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useReducer","useCallback","api","jsxDEV","_jsxDEV","UserContext","initialState","users","currentPage","totalPages","loading","error","reducer","state","action","type","payload","slice","map","user","id","filter","UserProvider","children","_s","dispatch","fetchUsers","page","limit","response","getUsers","responseData","data","Error","console","message","addUser","log","createUser","newUser","updateUser","updatedUser","deleteUser","setPage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserContext","_s2","$RefreshReg$"],"sources":["D:/Progects/task_server/FullStack_test/client/src/context/UserContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useReducer, useCallback } from 'react';\r\nimport * as api from '../services/api';\r\n\r\nconst UserContext = createContext();\r\n\r\nconst initialState = {\r\n  users: [],\r\n  currentPage: 1,\r\n  totalPages: 1,\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'FETCH_START':\r\n      return { ...state, loading: true, error: null };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload.users,\r\n        totalPages: action.payload.totalPages,\r\n        currentPage: action.payload.currentPage,\r\n      };\r\n    case 'FETCH_ERROR':\r\n      return { ...state, loading: false, error: action.payload };\r\n    case 'ADD_USER':\r\n      return {\r\n        ...state,\r\n        users: [action.payload, ...state.users.slice(0, 9)] \r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(user => \r\n          user.id === action.payload.id ? action.payload : user\r\n        ),\r\n      };\r\n    case 'DELETE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user.id !== action.payload),\r\n      };\r\n    case 'SET_PAGE':\r\n      return { ...state, currentPage: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function UserProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchUsers = useCallback(async (page = 1, limit = 10) => {\r\n    try {\r\n      dispatch({ type: 'FETCH_START' });\r\n      const response = await api.getUsers(page, limit);\r\n      \r\n      const responseData = response.data;\r\n      \r\n      if (!responseData.data || !responseData.totalPages) {\r\n        throw new Error('Некорректный формат ответа сервера');\r\n      }\r\n      \r\n      dispatch({\r\n        type: 'FETCH_SUCCESS',\r\n        payload: {\r\n          users: responseData.data,\r\n          totalPages: responseData.totalPages,\r\n          currentPage: page,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки пользователей:', error);\r\n      dispatch({ \r\n        type: 'FETCH_ERROR', \r\n        payload: error.message || 'Ошибка загрузки данных'\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const addUser = useCallback(async user => {\r\n    try {\r\n      console.log('Creating user:', user);\r\n      const response = await api.createUser(user);\r\n      const newUser = response.data;\r\n      \r\n      dispatch({ type: 'ADD_USER', payload: newUser });\r\n      return newUser;\r\n    } catch (error) {\r\n      console.error('Ошибка создания пользователя:', error);\r\n      if (error.response) {\r\n        console.error('Server response:', error.response.data);\r\n      }\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  const updateUser = useCallback(async (id, user) => {\r\n    try {\r\n      console.log('Updating user:', user);\r\n      const response = await api.updateUser(id, user);\r\n      const updatedUser = response.data;\r\n      \r\n      dispatch({ type: 'UPDATE_USER', payload: updatedUser });\r\n      return updatedUser;\r\n    } catch (error) {\r\n      console.error('Ошибка обновления пользователя:', error);\r\n      if (error.response) {\r\n        console.error('Server response:', error.response.data);\r\n      }\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  const deleteUser = useCallback(async id => {\r\n    try {\r\n      await api.deleteUser(id);\r\n      dispatch({ type: 'DELETE_USER', payload: id });\r\n    } catch (error) {\r\n      console.error('Ошибка удаления пользователя:', error);\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  const setPage = useCallback(page => {\r\n    dispatch({ type: 'SET_PAGE', payload: page });\r\n    fetchUsers(page);\r\n  }, [fetchUsers]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [fetchUsers]);\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        ...state,\r\n        fetchUsers,\r\n        addUser,\r\n        updateUser,\r\n        deleteUser,\r\n        setPage,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useUserContext = () => useContext(UserContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}